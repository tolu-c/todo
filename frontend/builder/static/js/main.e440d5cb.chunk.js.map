{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","value","target","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e440d5cb.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false,\n      },\n      editing: false,\n    };\n\n    this.fetchTasks = this.fetchTasks.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.completed = this.completed.bind(this);\n  }\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      let cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentWillMount() {\n    this.fetchTasks();\n  }\n\n  fetchTasks() {\n    console.log(\"fetching...\");\n\n    fetch(\"djangoxreact-todo-app.herokuapp.com/api/task-list/\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          todoList: data,\n        })\n      );\n  }\n\n  handleChange(e) {\n    let value = e.target.value;\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value,\n      },\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"Item:\", this.state.activeItem);\n    let csrftoken = this.getCookie(\"csrftoken\");\n\n    let url = \"djangoxreact-todo-app.herokuapp.com/api/task-create/\";\n\n    if (this.state.editing === true) {\n      url = `djangoxreact-todo-app.herokuapp.com/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem),\n    })\n      .then((response) => {\n        this.fetchTasks();\n        this.setState({\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        console.log(`Error: ${error}`);\n      });\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    });\n  }\n\n  deleteItem(task) {\n    let csrftoken = this.getCookie(\"csrftoken\");\n    fetch(`djangoxreact-todo-app.herokuapp.com/api/task-delete/${task.id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n    }).then((response) => {\n      this.fetchTasks();\n    });\n  }\n\n  completed(task) {\n    task.completed = !task.completed;\n    console.log(`task: ${task.completed}`);\n    let csrftoken = this.getCookie(\"csrftoken\");\n    let url = `djangoxreact-todo-app.herokuapp.com/api/task-update/${task.id}/`;\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify({ completed: task.completed, title: task.title }),\n    }).then(() => {\n      this.fetchTasks();\n    });\n  }\n\n  render() {\n    let tasks = this.state.todoList;\n    let self = this;\n\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                    id=\"title\"\n                    type=\"text\"\n                    placeholder=\"Add Task\"\n                    name=\"title\"\n                    value={this.state.activeItem.title}\n                  />\n                </div>\n\n                <div style={{ flex: 1 }}>\n                  <input id=\"submit\" className=\"btn\" type=\"submit\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={() => self.completed(task)} style={{ flex: 7 }}>\n                    {task.completed === false ? (\n                      <span>{task.title}</span>\n                    ) : (\n                      <strike>{task.title}</strike>\n                    )}\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => self.startEdit(task)}\n                      className=\"btn btn-sm btn-outline-info\"\n                    >\n                      Edit\n                    </button>\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => self.deleteItem(task)}\n                      className=\"btn btn-sm btn-outline-dark delete\"\n                    >\n                      -\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}